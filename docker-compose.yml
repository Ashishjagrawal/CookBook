services:
  postgres:
    image: postgres:15
    container_name: recipe_postgres
    environment:
      POSTGRES_DB: recipe_platform
      POSTGRES_USER: recipe_user
      POSTGRES_PASSWORD: recipe_password
      POSTGRES_HOST_AUTH_METHOD: md5
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - recipe_network

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.11.0
    container_name: recipe_elasticsearch
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    ports:
      - "9200:9200"
      - "9300:9300"
    volumes:
      - elasticsearch_data:/usr/share/elasticsearch/data
    networks:
      - recipe_network

  redis:
    image: redis:7-alpine
    container_name: recipe_redis
    ports:
      - "6380:6379"
    volumes:
      - redis_data:/data
    networks:
      - recipe_network

  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: recipe_kafka
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://localhost:9092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "9092:9092"
    depends_on:
      - zookeeper
    networks:
      - recipe_network

  zookeeper:
    image: confluentinc/cp-zookeeper:latest
    container_name: recipe_zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    networks:
      - recipe_network

  app:
    build: .
    container_name: recipe_app
    environment:
      - NODE_ENV=production
      - PORT=4323
      - DATABASE_URL=postgresql://recipe_user:recipe_password@postgres:5432/recipe_platform?schema=public
      - ELASTICSEARCH_NODE=http://elasticsearch:9200
      - KAFKA_BROKER=kafka:9092
      - JWT_SECRET=your-super-secret-jwt-key-change-this-in-production
      - JWT_EXPIRES_IN=7d
      - OPENAI_API_KEY=your-openai-api-key-here
    ports:
      - "4323:4323"
    depends_on:
      - postgres
      - elasticsearch
      - kafka
    networks:
      - recipe_network
    restart: unless-stopped

volumes:
  postgres_data:
  elasticsearch_data:
  redis_data:

networks:
  recipe_network:
    driver: bridge
